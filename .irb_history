FoodCost.joins(price: { ingredient: :unit } )
exit
@food_costs
FoodCost.joins(price: :ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost").where(recipe_id: params[:id])
FoodCost.where(recipe_id: p\
arams[:id]).joins(price: :ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
FoodCost.where(recipe_id: params[:id]).joins(price: :ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
FoodCost.joins(price: :ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
FoodCost.all
@food_costs = FoodCost.where(recipe_id: params[:id]).joins(price: :ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
@food_costs
@food_costs.name
@food_costs.first.name
@food_costs.first.quantity
@food_costs.class
@food_costs.joins(:unit).select('@food_costs.id, unit.id')
@food_costs.joins(:unit)
@food_costs.joins(:unit)
@food_costs.joins(unit:)
FoodCost.joins(price: :ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
exit
FoodCost.joins(price: :ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
FoodCost.joins(price: :ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
FoodCost.joins(price: :ingredient).joins(:unit).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
FoodCost.joins(price: :ingredient).joins(:unit)
FoodCost.joins(price: :ingredient)
FoodCost.joins(price: :ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
exit
@food_costs
exit
exit
exit
exit
Recipe.all
exit
Recipe.all
FoodCost.joins(:price)
FoodCost.leftjoins(:price)
FoodCost.left_joins(:price)
FoodCost.all
FoodCost.joins(:prices)
IngredientUnit.joins(:ingredient, :unit).find_by(ingredient: { name: ingredient }, unit: { unit: unit })
Price.joins(:ingredient).find_by(ingredient: { name: ingredient })
Price.joins(:ingredient).find_by(ingredient: { id: 1  })
Price.first
Price.all.includes(:ingredients)
Price.all.includes(:ingredient)
Price.all.includes(:ingredient).where(name: 'ごはん')
Price.all.includes(:ingredient).where(ingredient: { name: 'ごはん' } )
Price.eager_load(:ingredient)
Price.eager_load(:ingredient).select("ingredient.name")
Price.includes(:ingredient).select("ingredient.name")
Price.includes(:ingredient)
Price.includes(:ingredient).select("price.amount")
Price.includes(:ingredient).select(:amount)
Price.select(:amount)
Price.includes(:ingredient)
Price.includes(:ingredient).select("price.amount")
Price.includes(:ingredients)
Price.includes(ingredient:)
Price.includes(:ingredient)
Price.select("price.amount")
Price.select(:amount)
exit
Recipe.all.select(:amount)
Recipe.class
Recipe.all.class
Recipe.all.includes(:ingredient)
Recipe.includes(:ingredient)
Price.includes(:ingredient)
Price.includes(:ingredient).class
Price.includes(:ingredient).select(:amount)
Price.includes(:ingredient).select(:quantity)
Price.includes(:ingredient).select(:unit_id)
Price.includes(:ingredient).select(price: {:unit_id})
Price.select(:unit_id)
Price.includes(:ingredient).select(:unit_id)
Price.includes(:ingredient).select(:unit_id)
Price.includes(:ingredient).select(:ingredient_id)
Price.includes(:ingredient).select(:ingredient_id :unit_id)
Price.includes(:ingredient).select(:ingredient_id, :unit_id)
Price.includes(:ingredient).select(:unit_id)
Price.includes(:ingredient).select("ingredient.id, price.id")
Price.includes(:ingredient).select("ingredient.name, price.id")
Price.select(:id, :one_base_unit_price, 'ingredient.name').includes(:ingredient) 
Price.select("price.id, ingredient.name").includes(:ingredient) 
Price.joins(:ingredient).select("prices.one_base_unit_price, ingredients.name")
Price.joins(:ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, prices.one_base_unit_price")
FoodCost.include(price: :ingredient)
FoodCost.include(:price :ingredient)
FoodCost.include(:price, :ingredient)
FoodCost.includes(:price, :ingredient)
FoodCost.includes(:price)
FoodCost.includes(:price, :ingredient)
FoodCost.includes(price:, :ingredient)
FoodCost.includes(price: :ingredient)
FoodCost.includes(price: :ingredient).select('ingredient.name, prices.purchase_price, price.quantity, price.unit_id')
FoodCost.includes(price: :ingredient).select('ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id')
FoodCost.includes(price: :ingredient).select('ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount'))
FoodCost.includes(price: :ingredient).select('ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount')
FoodCost.includes(price:).select('prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount')
FoodCost.includes(:price).select('prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount')
FoodCost.includes(:price)
FoodCost.includes(:price).select('food_costs.id, prices.id')
FoodCost.includes(:price).select('food_cost.id, pricesid')

Price.joins(:ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, prices.one_base_unit_price")
FoodCost.joins(:price).select('foodcosts.id, prices.id')
FoodCost.joins(:price)
FoodCost.joins(:price).select("food_costs.id, prices.id")
FoodCost.joins(:price).select("food_costs.id, prices.purchase_price")
FoodCost.joins(:price).select("prices.id, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
FoodCost.joins(price: :ingredient).select("ingredient.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
FoodCost.joins(price: :ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
FoodCost.joins(price: {:ingredient} price:{:unit}).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
FoodCost.joins(price: {:ingredient} price:{:unit})
FoodCost.joins(price: {:ingredient})
FoodCost.joins(price: { ingredient: })
FoodCost.joins(price: { ingredient: :unit } )
exit
@food_costs
FoodCost.joins(price: :ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost").where(recipe_id: params[:id])
FoodCost.where(recipe_id: p\
arams[:id]).joins(price: :ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
FoodCost.where(recipe_id: params[:id]).joins(price: :ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
FoodCost.joins(price: :ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
FoodCost.all
@food_costs = FoodCost.where(recipe_id: params[:id]).joins(price: :ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
@food_costs
@food_costs.name
@food_costs.first.name
@food_costs.first.quantity
@food_costs.class
@food_costs.joins(:unit).select('@food_costs.id, unit.id')
@food_costs.joins(:unit)
@food_costs.joins(:unit)
@food_costs.joins(unit:)
FoodCost.joins(price: :ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
exit
FoodCost.joins(price: :ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
FoodCost.joins(price: :ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
FoodCost.joins(price: :ingredient).joins(:unit).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
FoodCost.joins(price: :ingredient).joins(:unit)
FoodCost.joins(price: :ingredient)
FoodCost.joins(price: :ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
exit
@food_costs
exit
@food_costs.class
exit
Recipe.all
exit
Recipe.all
FoodCost.joins(:price)
FoodCost.leftjoins(:price)
FoodCost.left_joins(:price)
FoodCost.all
FoodCost.joins(:prices)
IngredientUnit.joins(:ingredient, :unit).find_by(ingredient: { name: ingredient }, unit: { unit: unit })
Price.joins(:ingredient).find_by(ingredient: { name: ingredient })
Price.joins(:ingredient).find_by(ingredient: { id: 1  })
Price.first
Price.all.includes(:ingredients)
Price.all.includes(:ingredient)
Price.all.includes(:ingredient).where(name: 'ごはん')
Price.all.includes(:ingredient).where(ingredient: { name: 'ごはん' } )
Price.eager_load(:ingredient)
Price.eager_load(:ingredient).select("ingredient.name")
Price.includes(:ingredient).select("ingredient.name")
Price.includes(:ingredient)
Price.includes(:ingredient).select("price.amount")
Price.includes(:ingredient).select(:amount)
Price.select(:amount)
Price.includes(:ingredient)
Price.includes(:ingredient).select("price.amount")
Price.includes(:ingredients)
Price.includes(ingredient:)
Price.includes(:ingredient)
Price.select("price.amount")
Price.select(:amount)
exit
Recipe.all.select(:amount)
Recipe.class
Recipe.all.class
Recipe.all.includes(:ingredient)
Recipe.includes(:ingredient)
Price.includes(:ingredient)
Price.includes(:ingredient).class
Price.includes(:ingredient).select(:amount)
Price.includes(:ingredient).select(:quantity)
Price.includes(:ingredient).select(:unit_id)
Price.includes(:ingredient).select(price: {:unit_id})
Price.select(:unit_id)
Price.includes(:ingredient).select(:unit_id)
Price.includes(:ingredient).select(:unit_id)
Price.includes(:ingredient).select(:ingredient_id)
Price.includes(:ingredient).select(:ingredient_id :unit_id)
Price.includes(:ingredient).select(:ingredient_id, :unit_id)
Price.includes(:ingredient).select(:unit_id)
Price.includes(:ingredient).select("ingredient.id, price.id")
Price.includes(:ingredient).select("ingredient.name, price.id")
Price.select(:id, :one_base_unit_price, 'ingredient.name').includes(:ingredient) 
Price.select("price.id, ingredient.name").includes(:ingredient) 
Price.joins(:ingredient).select("prices.one_base_unit_price, ingredients.name")
Price.joins(:ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, prices.one_base_unit_price")
FoodCost.include(price: :ingredient)
FoodCost.include(:price :ingredient)
FoodCost.include(:price, :ingredient)
FoodCost.includes(:price, :ingredient)
FoodCost.includes(:price)
FoodCost.includes(:price, :ingredient)
FoodCost.includes(price:, :ingredient)
FoodCost.includes(price: :ingredient)
FoodCost.includes(price: :ingredient).select('ingredient.name, prices.purchase_price, price.quantity, price.unit_id')
FoodCost.includes(price: :ingredient).select('ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id')
FoodCost.includes(price: :ingredient).select('ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount'))
FoodCost.includes(price: :ingredient).select('ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount')
FoodCost.includes(price:).select('prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount')
FoodCost.includes(:price).select('prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount')
FoodCost.includes(:price)
FoodCost.includes(:price).select('food_costs.id, prices.id')
FoodCost.includes(:price).select('food_cost.id, pricesid')

Price.joins(:ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, prices.one_base_unit_price")
FoodCost.joins(:price).select('foodcosts.id, prices.id')
FoodCost.joins(:price)
FoodCost.joins(:price).select("food_costs.id, prices.id")
FoodCost.joins(:price).select("food_costs.id, prices.purchase_price")
FoodCost.joins(:price).select("prices.id, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
FoodCost.joins(price: :ingredient).select("ingredient.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
FoodCost.joins(price: :ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
FoodCost.joins(price: {:ingredient} price:{:unit}).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
FoodCost.joins(price: {:ingredient} price:{:unit})
FoodCost.joins(price: {:ingredient})
FoodCost.joins(price: { ingredient: })
FoodCost.joins(price: { ingredient: :unit } )
exit
@food_costs
FoodCost.joins(price: :ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost").where(recipe_id: params[:id])
FoodCost.where(recipe_id: p\
arams[:id]).joins(price: :ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
FoodCost.where(recipe_id: params[:id]).joins(price: :ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
FoodCost.joins(price: :ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
FoodCost.all
@food_costs = FoodCost.where(recipe_id: params[:id]).joins(price: :ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
@food_costs
@food_costs.name
@food_costs.first.name
@food_costs.first.quantity
@food_costs.class
@food_costs.joins(:unit).select('@food_costs.id, unit.id')
@food_costs.joins(:unit)
@food_costs.joins(:unit)
@food_costs.joins(unit:)
FoodCost.joins(price: :ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
exit
FoodCost.joins(price: :ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
FoodCost.joins(price: :ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
FoodCost.joins(price: :ingredient).joins(:unit).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
FoodCost.joins(price: :ingredient).joins(:unit)
FoodCost.joins(price: :ingredient)
FoodCost.joins(price: :ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
exit
@food_costs
exit
exit
Recipe.all
exit
Recipe.all
FoodCost.joins(:price)
FoodCost.leftjoins(:price)
FoodCost.left_joins(:price)
FoodCost.all
FoodCost.joins(:prices)
IngredientUnit.joins(:ingredient, :unit).find_by(ingredient: { name: ingredient }, unit: { unit: unit })
Price.joins(:ingredient).find_by(ingredient: { name: ingredient })
Price.joins(:ingredient).find_by(ingredient: { id: 1  })
Price.first
Price.all.includes(:ingredients)
Price.all.includes(:ingredient)
Price.all.includes(:ingredient).where(name: 'ごはん')
Price.all.includes(:ingredient).where(ingredient: { name: 'ごはん' } )
Price.eager_load(:ingredient)
Price.eager_load(:ingredient).select("ingredient.name")
Price.includes(:ingredient).select("ingredient.name")
Price.includes(:ingredient)
Price.includes(:ingredient).select("price.amount")
Price.includes(:ingredient).select(:amount)
Price.select(:amount)
Price.includes(:ingredient)
Price.includes(:ingredient).select("price.amount")
Price.includes(:ingredients)
Price.includes(ingredient:)
Price.includes(:ingredient)
Price.select("price.amount")
Price.select(:amount)
exit
Recipe.all.select(:amount)
Recipe.class
Recipe.all.class
Recipe.all.includes(:ingredient)
Recipe.includes(:ingredient)
Price.includes(:ingredient)
Price.includes(:ingredient).class
Price.includes(:ingredient).select(:amount)
Price.includes(:ingredient).select(:quantity)
Price.includes(:ingredient).select(:unit_id)
Price.includes(:ingredient).select(price: {:unit_id})
Price.select(:unit_id)
Price.includes(:ingredient).select(:unit_id)
Price.includes(:ingredient).select(:unit_id)
Price.includes(:ingredient).select(:ingredient_id)
Price.includes(:ingredient).select(:ingredient_id :unit_id)
Price.includes(:ingredient).select(:ingredient_id, :unit_id)
Price.includes(:ingredient).select(:unit_id)
Price.includes(:ingredient).select("ingredient.id, price.id")
Price.includes(:ingredient).select("ingredient.name, price.id")
Price.select(:id, :one_base_unit_price, 'ingredient.name').includes(:ingredient) 
Price.select("price.id, ingredient.name").includes(:ingredient) 
Price.joins(:ingredient).select("prices.one_base_unit_price, ingredients.name")
Price.joins(:ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, prices.one_base_unit_price")
FoodCost.include(price: :ingredient)
FoodCost.include(:price :ingredient)
FoodCost.include(:price, :ingredient)
FoodCost.includes(:price, :ingredient)
FoodCost.includes(:price)
FoodCost.includes(:price, :ingredient)
FoodCost.includes(price:, :ingredient)
FoodCost.includes(price: :ingredient)
FoodCost.includes(price: :ingredient).select('ingredient.name, prices.purchase_price, price.quantity, price.unit_id')
FoodCost.includes(price: :ingredient).select('ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id')
FoodCost.includes(price: :ingredient).select('ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount'))
FoodCost.includes(price: :ingredient).select('ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount')
FoodCost.includes(price:).select('prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount')
FoodCost.includes(:price).select('prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount')
FoodCost.includes(:price)
FoodCost.includes(:price).select('food_costs.id, prices.id')
FoodCost.includes(:price).select('food_cost.id, pricesid')

Price.joins(:ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, prices.one_base_unit_price")
FoodCost.joins(:price).select('foodcosts.id, prices.id')
FoodCost.joins(:price)
FoodCost.joins(:price).select("food_costs.id, prices.id")
FoodCost.joins(:price).select("food_costs.id, prices.purchase_price")
FoodCost.joins(:price).select("prices.id, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
FoodCost.joins(price: :ingredient).select("ingredient.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
FoodCost.joins(price: :ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
FoodCost.joins(price: {:ingredient} price:{:unit}).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
FoodCost.joins(price: {:ingredient} price:{:unit})
FoodCost.joins(price: {:ingredient})
FoodCost.joins(price: { ingredient: })
FoodCost.joins(price: { ingredient: :unit } )
exit
@food_costs
FoodCost.joins(price: :ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost").where(recipe_id: params[:id])
FoodCost.where(recipe_id: p\
arams[:id]).joins(price: :ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
FoodCost.where(recipe_id: params[:id]).joins(price: :ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
FoodCost.joins(price: :ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
FoodCost.all
@food_costs = FoodCost.where(recipe_id: params[:id]).joins(price: :ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
@food_costs
@food_costs.name
@food_costs.first.name
@food_costs.first.quantity
@food_costs.class
@food_costs.joins(:unit).select('@food_costs.id, unit.id')
@food_costs.joins(:unit)
@food_costs.joins(:unit)
@food_costs.joins(unit:)
FoodCost.joins(price: :ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
exit
FoodCost.joins(price: :ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
FoodCost.joins(price: :ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
FoodCost.joins(price: :ingredient).joins(:unit).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
FoodCost.joins(price: :ingredient).joins(:unit)
FoodCost.joins(price: :ingredient)
FoodCost.joins(price: :ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
exit
@food_costs
exit
@food_costs.class
exit
Recipe.all
exit
Recipe.all
FoodCost.joins(:price)
FoodCost.leftjoins(:price)
FoodCost.left_joins(:price)
FoodCost.all
FoodCost.joins(:prices)
IngredientUnit.joins(:ingredient, :unit).find_by(ingredient: { name: ingredient }, unit: { unit: unit })
Price.joins(:ingredient).find_by(ingredient: { name: ingredient })
Price.joins(:ingredient).find_by(ingredient: { id: 1  })
Price.first
Price.all.includes(:ingredients)
Price.all.includes(:ingredient)
Price.all.includes(:ingredient).where(name: 'ごはん')
Price.all.includes(:ingredient).where(ingredient: { name: 'ごはん' } )
Price.eager_load(:ingredient)
Price.eager_load(:ingredient).select("ingredient.name")
Price.includes(:ingredient).select("ingredient.name")
Price.includes(:ingredient)
Price.includes(:ingredient).select("price.amount")
Price.includes(:ingredient).select(:amount)
Price.select(:amount)
Price.includes(:ingredient)
Price.includes(:ingredient).select("price.amount")
Price.includes(:ingredients)
Price.includes(ingredient:)
Price.includes(:ingredient)
Price.select("price.amount")
Price.select(:amount)
exit
Recipe.all.select(:amount)
Recipe.class
Recipe.all.class
Recipe.all.includes(:ingredient)
Recipe.includes(:ingredient)
Price.includes(:ingredient)
Price.includes(:ingredient).class
Price.includes(:ingredient).select(:amount)
Price.includes(:ingredient).select(:quantity)
Price.includes(:ingredient).select(:unit_id)
Price.includes(:ingredient).select(price: {:unit_id})
Price.select(:unit_id)
Price.includes(:ingredient).select(:unit_id)
Price.includes(:ingredient).select(:unit_id)
Price.includes(:ingredient).select(:ingredient_id)
Price.includes(:ingredient).select(:ingredient_id :unit_id)
Price.includes(:ingredient).select(:ingredient_id, :unit_id)
Price.includes(:ingredient).select(:unit_id)
Price.includes(:ingredient).select("ingredient.id, price.id")
Price.includes(:ingredient).select("ingredient.name, price.id")
Price.select(:id, :one_base_unit_price, 'ingredient.name').includes(:ingredient) 
Price.select("price.id, ingredient.name").includes(:ingredient) 
Price.joins(:ingredient).select("prices.one_base_unit_price, ingredients.name")
Price.joins(:ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, prices.one_base_unit_price")
FoodCost.include(price: :ingredient)
FoodCost.include(:price :ingredient)
FoodCost.include(:price, :ingredient)
FoodCost.includes(:price, :ingredient)
FoodCost.includes(:price)
FoodCost.includes(:price, :ingredient)
FoodCost.includes(price:, :ingredient)
FoodCost.includes(price: :ingredient)
FoodCost.includes(price: :ingredient).select('ingredient.name, prices.purchase_price, price.quantity, price.unit_id')
FoodCost.includes(price: :ingredient).select('ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id')
FoodCost.includes(price: :ingredient).select('ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount'))
FoodCost.includes(price: :ingredient).select('ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount')
FoodCost.includes(price:).select('prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount')
FoodCost.includes(:price).select('prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount')
FoodCost.includes(:price)
FoodCost.includes(:price).select('food_costs.id, prices.id')
FoodCost.includes(:price).select('food_cost.id, pricesid')

Price.joins(:ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, prices.one_base_unit_price")
FoodCost.joins(:price).select('foodcosts.id, prices.id')
FoodCost.joins(:price)
FoodCost.joins(:price).select("food_costs.id, prices.id")
FoodCost.joins(:price).select("food_costs.id, prices.purchase_price")
FoodCost.joins(:price).select("prices.id, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
FoodCost.joins(price: :ingredient).select("ingredient.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
FoodCost.joins(price: :ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
FoodCost.joins(price: {:ingredient} price:{:unit}).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
FoodCost.joins(price: {:ingredient} price:{:unit})
FoodCost.joins(price: {:ingredient})
FoodCost.joins(price: { ingredient: })
FoodCost.joins(price: { ingredient: :unit } )
exit
@food_costs
FoodCost.joins(price: :ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost").where(recipe_id: params[:id])
FoodCost.where(recipe_id: p\
arams[:id]).joins(price: :ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
FoodCost.where(recipe_id: params[:id]).joins(price: :ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
FoodCost.joins(price: :ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
FoodCost.all
@food_costs = FoodCost.where(recipe_id: params[:id]).joins(price: :ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
@food_costs
@food_costs.name
@food_costs.first.name
@food_costs.first.quantity
@food_costs.class
@food_costs.joins(:unit).select('@food_costs.id, unit.id')
@food_costs.joins(:unit)
@food_costs.joins(:unit)
@food_costs.joins(unit:)
FoodCost.joins(price: :ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
exit
FoodCost.joins(price: :ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
FoodCost.joins(price: :ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
FoodCost.joins(price: :ingredient).joins(:unit).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
FoodCost.joins(price: :ingredient).joins(:unit)
FoodCost.joins(price: :ingredient)
FoodCost.joins(price: :ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
exit
@food_costs
exit
exit
exit
Recipe.all
exit
Recipe.all
FoodCost.joins(:price)
FoodCost.leftjoins(:price)
FoodCost.left_joins(:price)
FoodCost.all
FoodCost.joins(:prices)
IngredientUnit.joins(:ingredient, :unit).find_by(ingredient: { name: ingredient }, unit: { unit: unit })
Price.joins(:ingredient).find_by(ingredient: { name: ingredient })
Price.joins(:ingredient).find_by(ingredient: { id: 1  })
Price.first
Price.all.includes(:ingredients)
Price.all.includes(:ingredient)
Price.all.includes(:ingredient).where(name: 'ごはん')
Price.all.includes(:ingredient).where(ingredient: { name: 'ごはん' } )
Price.eager_load(:ingredient)
Price.eager_load(:ingredient).select("ingredient.name")
Price.includes(:ingredient).select("ingredient.name")
Price.includes(:ingredient)
Price.includes(:ingredient).select("price.amount")
Price.includes(:ingredient).select(:amount)
Price.select(:amount)
Price.includes(:ingredient)
Price.includes(:ingredient).select("price.amount")
Price.includes(:ingredients)
Price.includes(ingredient:)
Price.includes(:ingredient)
Price.select("price.amount")
Price.select(:amount)
exit
Recipe.all.select(:amount)
Recipe.class
Recipe.all.class
Recipe.all.includes(:ingredient)
Recipe.includes(:ingredient)
Price.includes(:ingredient)
Price.includes(:ingredient).class
Price.includes(:ingredient).select(:amount)
Price.includes(:ingredient).select(:quantity)
Price.includes(:ingredient).select(:unit_id)
Price.includes(:ingredient).select(price: {:unit_id})
Price.select(:unit_id)
Price.includes(:ingredient).select(:unit_id)
Price.includes(:ingredient).select(:unit_id)
Price.includes(:ingredient).select(:ingredient_id)
Price.includes(:ingredient).select(:ingredient_id :unit_id)
Price.includes(:ingredient).select(:ingredient_id, :unit_id)
Price.includes(:ingredient).select(:unit_id)
Price.includes(:ingredient).select("ingredient.id, price.id")
Price.includes(:ingredient).select("ingredient.name, price.id")
Price.select(:id, :one_base_unit_price, 'ingredient.name').includes(:ingredient) 
Price.select("price.id, ingredient.name").includes(:ingredient) 
Price.joins(:ingredient).select("prices.one_base_unit_price, ingredients.name")
Price.joins(:ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, prices.one_base_unit_price")
FoodCost.include(price: :ingredient)
FoodCost.include(:price :ingredient)
FoodCost.include(:price, :ingredient)
FoodCost.includes(:price, :ingredient)
FoodCost.includes(:price)
FoodCost.includes(:price, :ingredient)
FoodCost.includes(price:, :ingredient)
FoodCost.includes(price: :ingredient)
FoodCost.includes(price: :ingredient).select('ingredient.name, prices.purchase_price, price.quantity, price.unit_id')
FoodCost.includes(price: :ingredient).select('ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id')
FoodCost.includes(price: :ingredient).select('ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount'))
FoodCost.includes(price: :ingredient).select('ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount')
FoodCost.includes(price:).select('prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount')
FoodCost.includes(:price).select('prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount')
FoodCost.includes(:price)
FoodCost.includes(:price).select('food_costs.id, prices.id')
FoodCost.includes(:price).select('food_cost.id, pricesid')

Price.joins(:ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, prices.one_base_unit_price")
FoodCost.joins(:price).select('foodcosts.id, prices.id')
FoodCost.joins(:price)
FoodCost.joins(:price).select("food_costs.id, prices.id")
FoodCost.joins(:price).select("food_costs.id, prices.purchase_price")
FoodCost.joins(:price).select("prices.id, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
FoodCost.joins(price: :ingredient).select("ingredient.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
FoodCost.joins(price: :ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
FoodCost.joins(price: {:ingredient} price:{:unit}).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
FoodCost.joins(price: {:ingredient} price:{:unit})
FoodCost.joins(price: {:ingredient})
FoodCost.joins(price: { ingredient: })
FoodCost.joins(price: { ingredient: :unit } )
exit
@food_costs
FoodCost.joins(price: :ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost").where(recipe_id: params[:id])
FoodCost.where(recipe_id: p\
arams[:id]).joins(price: :ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
FoodCost.where(recipe_id: params[:id]).joins(price: :ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
FoodCost.joins(price: :ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
FoodCost.all
@food_costs = FoodCost.where(recipe_id: params[:id]).joins(price: :ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
@food_costs
@food_costs.name
@food_costs.first.name
@food_costs.first.quantity
@food_costs.class
@food_costs.joins(:unit).select('@food_costs.id, unit.id')
@food_costs.joins(:unit)
@food_costs.joins(:unit)
@food_costs.joins(unit:)
FoodCost.joins(price: :ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
exit
FoodCost.joins(price: :ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
FoodCost.joins(price: :ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
FoodCost.joins(price: :ingredient).joins(:unit).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
FoodCost.joins(price: :ingredient).joins(:unit)
FoodCost.joins(price: :ingredient)
FoodCost.joins(price: :ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
exit
@food_costs
exit
@food_costs.class
exit
Recipe.all
exit
Recipe.all
FoodCost.joins(:price)
FoodCost.leftjoins(:price)
FoodCost.left_joins(:price)
FoodCost.all
FoodCost.joins(:prices)
IngredientUnit.joins(:ingredient, :unit).find_by(ingredient: { name: ingredient }, unit: { unit: unit })
Price.joins(:ingredient).find_by(ingredient: { name: ingredient })
Price.joins(:ingredient).find_by(ingredient: { id: 1  })
Price.first
Price.all.includes(:ingredients)
Price.all.includes(:ingredient)
Price.all.includes(:ingredient).where(name: 'ごはん')
Price.all.includes(:ingredient).where(ingredient: { name: 'ごはん' } )
Price.eager_load(:ingredient)
Price.eager_load(:ingredient).select("ingredient.name")
Price.includes(:ingredient).select("ingredient.name")
Price.includes(:ingredient)
Price.includes(:ingredient).select("price.amount")
Price.includes(:ingredient).select(:amount)
Price.select(:amount)
Price.includes(:ingredient)
Price.includes(:ingredient).select("price.amount")
Price.includes(:ingredients)
Price.includes(ingredient:)
Price.includes(:ingredient)
Price.select("price.amount")
Price.select(:amount)
exit
Recipe.all.select(:amount)
Recipe.class
Recipe.all.class
Recipe.all.includes(:ingredient)
Recipe.includes(:ingredient)
Price.includes(:ingredient)
Price.includes(:ingredient).class
Price.includes(:ingredient).select(:amount)
Price.includes(:ingredient).select(:quantity)
Price.includes(:ingredient).select(:unit_id)
Price.includes(:ingredient).select(price: {:unit_id})
Price.select(:unit_id)
Price.includes(:ingredient).select(:unit_id)
Price.includes(:ingredient).select(:unit_id)
Price.includes(:ingredient).select(:ingredient_id)
Price.includes(:ingredient).select(:ingredient_id :unit_id)
Price.includes(:ingredient).select(:ingredient_id, :unit_id)
Price.includes(:ingredient).select(:unit_id)
Price.includes(:ingredient).select("ingredient.id, price.id")
Price.includes(:ingredient).select("ingredient.name, price.id")
Price.select(:id, :one_base_unit_price, 'ingredient.name').includes(:ingredient) 
Price.select("price.id, ingredient.name").includes(:ingredient) 
Price.joins(:ingredient).select("prices.one_base_unit_price, ingredients.name")
Price.joins(:ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, prices.one_base_unit_price")
FoodCost.include(price: :ingredient)
FoodCost.include(:price :ingredient)
FoodCost.include(:price, :ingredient)
FoodCost.includes(:price, :ingredient)
FoodCost.includes(:price)
FoodCost.includes(:price, :ingredient)
FoodCost.includes(price:, :ingredient)
FoodCost.includes(price: :ingredient)
FoodCost.includes(price: :ingredient).select('ingredient.name, prices.purchase_price, price.quantity, price.unit_id')
FoodCost.includes(price: :ingredient).select('ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id')
FoodCost.includes(price: :ingredient).select('ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount'))
FoodCost.includes(price: :ingredient).select('ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount')
FoodCost.includes(price:).select('prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount')
FoodCost.includes(:price).select('prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount')
FoodCost.includes(:price)
FoodCost.includes(:price).select('food_costs.id, prices.id')
FoodCost.includes(:price).select('food_cost.id, pricesid')

Price.joins(:ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, prices.one_base_unit_price")
FoodCost.joins(:price).select('foodcosts.id, prices.id')
FoodCost.joins(:price)
FoodCost.joins(:price).select("food_costs.id, prices.id")
FoodCost.joins(:price).select("food_costs.id, prices.purchase_price")
FoodCost.joins(:price).select("prices.id, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
FoodCost.joins(price: :ingredient).select("ingredient.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
FoodCost.joins(price: :ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
FoodCost.joins(price: {:ingredient} price:{:unit}).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
FoodCost.joins(price: {:ingredient} price:{:unit})
FoodCost.joins(price: {:ingredient})
FoodCost.joins(price: { ingredient: })
FoodCost.joins(price: { ingredient: :unit } )
exit
@food_costs
FoodCost.joins(price: :ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost").where(recipe_id: params[:id])
FoodCost.where(recipe_id: p\
arams[:id]).joins(price: :ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
FoodCost.where(recipe_id: params[:id]).joins(price: :ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
FoodCost.joins(price: :ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
FoodCost.all
@food_costs = FoodCost.where(recipe_id: params[:id]).joins(price: :ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
@food_costs
@food_costs.name
@food_costs.first.name
@food_costs.first.quantity
@food_costs.class
@food_costs.joins(:unit).select('@food_costs.id, unit.id')
@food_costs.joins(:unit)
@food_costs.joins(:unit)
@food_costs.joins(unit:)
FoodCost.joins(price: :ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
exit
FoodCost.joins(price: :ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
FoodCost.joins(price: :ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
FoodCost.joins(price: :ingredient).joins(:unit).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
FoodCost.joins(price: :ingredient).joins(:unit)
FoodCost.joins(price: :ingredient)
FoodCost.joins(price: :ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
exit
@food_costs
exit
exit
Recipe.all
exit
Recipe.all
FoodCost.joins(:price)
FoodCost.leftjoins(:price)
FoodCost.left_joins(:price)
FoodCost.all
FoodCost.joins(:prices)
IngredientUnit.joins(:ingredient, :unit).find_by(ingredient: { name: ingredient }, unit: { unit: unit })
Price.joins(:ingredient).find_by(ingredient: { name: ingredient })
Price.joins(:ingredient).find_by(ingredient: { id: 1  })
Price.first
Price.all.includes(:ingredients)
Price.all.includes(:ingredient)
Price.all.includes(:ingredient).where(name: 'ごはん')
Price.all.includes(:ingredient).where(ingredient: { name: 'ごはん' } )
Price.eager_load(:ingredient)
Price.eager_load(:ingredient).select("ingredient.name")
Price.includes(:ingredient).select("ingredient.name")
Price.includes(:ingredient)
Price.includes(:ingredient).select("price.amount")
Price.includes(:ingredient).select(:amount)
Price.select(:amount)
Price.includes(:ingredient)
Price.includes(:ingredient).select("price.amount")
Price.includes(:ingredients)
Price.includes(ingredient:)
Price.includes(:ingredient)
Price.select("price.amount")
Price.select(:amount)
exit
Recipe.all.select(:amount)
Recipe.class
Recipe.all.class
Recipe.all.includes(:ingredient)
Recipe.includes(:ingredient)
Price.includes(:ingredient)
Price.includes(:ingredient).class
Price.includes(:ingredient).select(:amount)
Price.includes(:ingredient).select(:quantity)
Price.includes(:ingredient).select(:unit_id)
Price.includes(:ingredient).select(price: {:unit_id})
Price.select(:unit_id)
Price.includes(:ingredient).select(:unit_id)
Price.includes(:ingredient).select(:unit_id)
Price.includes(:ingredient).select(:ingredient_id)
Price.includes(:ingredient).select(:ingredient_id :unit_id)
Price.includes(:ingredient).select(:ingredient_id, :unit_id)
Price.includes(:ingredient).select(:unit_id)
Price.includes(:ingredient).select("ingredient.id, price.id")
Price.includes(:ingredient).select("ingredient.name, price.id")
Price.select(:id, :one_base_unit_price, 'ingredient.name').includes(:ingredient) 
Price.select("price.id, ingredient.name").includes(:ingredient) 
Price.joins(:ingredient).select("prices.one_base_unit_price, ingredients.name")
Price.joins(:ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, prices.one_base_unit_price")
FoodCost.include(price: :ingredient)
FoodCost.include(:price :ingredient)
FoodCost.include(:price, :ingredient)
FoodCost.includes(:price, :ingredient)
FoodCost.includes(:price)
FoodCost.includes(:price, :ingredient)
FoodCost.includes(price:, :ingredient)
FoodCost.includes(price: :ingredient)
FoodCost.includes(price: :ingredient).select('ingredient.name, prices.purchase_price, price.quantity, price.unit_id')
FoodCost.includes(price: :ingredient).select('ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id')
FoodCost.includes(price: :ingredient).select('ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount'))
FoodCost.includes(price: :ingredient).select('ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount')
FoodCost.includes(price:).select('prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount')
FoodCost.includes(:price).select('prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount')
FoodCost.includes(:price)
FoodCost.includes(:price).select('food_costs.id, prices.id')
FoodCost.includes(:price).select('food_cost.id, pricesid')

Price.joins(:ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, prices.one_base_unit_price")
FoodCost.joins(:price).select('foodcosts.id, prices.id')
FoodCost.joins(:price)
FoodCost.joins(:price).select("food_costs.id, prices.id")
FoodCost.joins(:price).select("food_costs.id, prices.purchase_price")
FoodCost.joins(:price).select("prices.id, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
FoodCost.joins(price: :ingredient).select("ingredient.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
FoodCost.joins(price: :ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
FoodCost.joins(price: {:ingredient} price:{:unit}).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
FoodCost.joins(price: {:ingredient} price:{:unit})
FoodCost.joins(price: {:ingredient})
FoodCost.joins(price: { ingredient: })
FoodCost.joins(price: { ingredient: :unit } )
exit
@food_costs
FoodCost.joins(price: :ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost").where(recipe_id: params[:id])
FoodCost.where(recipe_id: p\
arams[:id]).joins(price: :ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
FoodCost.where(recipe_id: params[:id]).joins(price: :ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
FoodCost.joins(price: :ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
FoodCost.all
@food_costs = FoodCost.where(recipe_id: params[:id]).joins(price: :ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
@food_costs
@food_costs.name
@food_costs.first.name
@food_costs.first.quantity
@food_costs.class
@food_costs.joins(:unit).select('@food_costs.id, unit.id')
@food_costs.joins(:unit)
@food_costs.joins(:unit)
@food_costs.joins(unit:)
FoodCost.joins(price: :ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
exit
FoodCost.joins(price: :ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
FoodCost.joins(price: :ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
FoodCost.joins(price: :ingredient).joins(:unit).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
FoodCost.joins(price: :ingredient).joins(:unit)
FoodCost.joins(price: :ingredient)
FoodCost.joins(price: :ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
exit
@food_costs
exit
@food_costs.class
exit
Recipe.all
exit
Recipe.all
FoodCost.joins(:price)
FoodCost.leftjoins(:price)
FoodCost.left_joins(:price)
FoodCost.all
FoodCost.joins(:prices)
IngredientUnit.joins(:ingredient, :unit).find_by(ingredient: { name: ingredient }, unit: { unit: unit })
Price.joins(:ingredient).find_by(ingredient: { name: ingredient })
Price.joins(:ingredient).find_by(ingredient: { id: 1  })
Price.first
Price.all.includes(:ingredients)
Price.all.includes(:ingredient)
Price.all.includes(:ingredient).where(name: 'ごはん')
Price.all.includes(:ingredient).where(ingredient: { name: 'ごはん' } )
Price.eager_load(:ingredient)
Price.eager_load(:ingredient).select("ingredient.name")
Price.includes(:ingredient).select("ingredient.name")
Price.includes(:ingredient)
Price.includes(:ingredient).select("price.amount")
Price.includes(:ingredient).select(:amount)
Price.select(:amount)
Price.includes(:ingredient)
Price.includes(:ingredient).select("price.amount")
Price.includes(:ingredients)
Price.includes(ingredient:)
Price.includes(:ingredient)
Price.select("price.amount")
Price.select(:amount)
exit
Recipe.all.select(:amount)
Recipe.class
Recipe.all.class
Recipe.all.includes(:ingredient)
Recipe.includes(:ingredient)
Price.includes(:ingredient)
Price.includes(:ingredient).class
Price.includes(:ingredient).select(:amount)
Price.includes(:ingredient).select(:quantity)
Price.includes(:ingredient).select(:unit_id)
Price.includes(:ingredient).select(price: {:unit_id})
Price.select(:unit_id)
Price.includes(:ingredient).select(:unit_id)
Price.includes(:ingredient).select(:unit_id)
Price.includes(:ingredient).select(:ingredient_id)
Price.includes(:ingredient).select(:ingredient_id :unit_id)
Price.includes(:ingredient).select(:ingredient_id, :unit_id)
Price.includes(:ingredient).select(:unit_id)
Price.includes(:ingredient).select("ingredient.id, price.id")
Price.includes(:ingredient).select("ingredient.name, price.id")
Price.select(:id, :one_base_unit_price, 'ingredient.name').includes(:ingredient) 
Price.select("price.id, ingredient.name").includes(:ingredient) 
Price.joins(:ingredient).select("prices.one_base_unit_price, ingredients.name")
Price.joins(:ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, prices.one_base_unit_price")
FoodCost.include(price: :ingredient)
FoodCost.include(:price :ingredient)
FoodCost.include(:price, :ingredient)
FoodCost.includes(:price, :ingredient)
FoodCost.includes(:price)
FoodCost.includes(:price, :ingredient)
FoodCost.includes(price:, :ingredient)
FoodCost.includes(price: :ingredient)
FoodCost.includes(price: :ingredient).select('ingredient.name, prices.purchase_price, price.quantity, price.unit_id')
FoodCost.includes(price: :ingredient).select('ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id')
FoodCost.includes(price: :ingredient).select('ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount'))
FoodCost.includes(price: :ingredient).select('ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount')
FoodCost.includes(price:).select('prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount')
FoodCost.includes(:price).select('prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount')
FoodCost.includes(:price)
FoodCost.includes(:price).select('food_costs.id, prices.id')
FoodCost.includes(:price).select('food_cost.id, pricesid')

Price.joins(:ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, prices.one_base_unit_price")
FoodCost.joins(:price).select('foodcosts.id, prices.id')
FoodCost.joins(:price)
FoodCost.joins(:price).select("food_costs.id, prices.id")
FoodCost.joins(:price).select("food_costs.id, prices.purchase_price")
FoodCost.joins(:price).select("prices.id, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
FoodCost.joins(price: :ingredient).select("ingredient.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
FoodCost.joins(price: :ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
FoodCost.joins(price: {:ingredient} price:{:unit}).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
FoodCost.joins(price: {:ingredient} price:{:unit})
FoodCost.joins(price: {:ingredient})
FoodCost.joins(price: { ingredient: })
FoodCost.joins(price: { ingredient: :unit } )
exit
@food_costs
FoodCost.joins(price: :ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost").where(recipe_id: params[:id])
FoodCost.where(recipe_id: p\
arams[:id]).joins(price: :ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
FoodCost.where(recipe_id: params[:id]).joins(price: :ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
FoodCost.joins(price: :ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
FoodCost.all
@food_costs = FoodCost.where(recipe_id: params[:id]).joins(price: :ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
@food_costs
@food_costs.name
@food_costs.first.name
@food_costs.first.quantity
@food_costs.class
@food_costs.joins(:unit).select('@food_costs.id, unit.id')
@food_costs.joins(:unit)
@food_costs.joins(:unit)
@food_costs.joins(unit:)
FoodCost.joins(price: :ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
exit
FoodCost.joins(price: :ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
FoodCost.joins(price: :ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
FoodCost.joins(price: :ingredient).joins(:unit).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
FoodCost.joins(price: :ingredient).joins(:unit)
FoodCost.joins(price: :ingredient)
FoodCost.joins(price: :ingredient).select("ingredients.name, prices.purchase_price, prices.quantity, prices.unit_id, food_costs.amount, food_costs.cost")
exit
@food_costs
exit
exit
exit
exit
exit
exit
Recipe.all
exit
return [url, cuisine_name, originator, rows]
exit
redirect_to show_recipe_path
redirect_to recipe
Recipe.find_by(recipe: url)
Recipe.all
Recipe.find_by(recipe_url: url)
Recipe.where(recipe_url: url)
exit
Recipe.find_by(recipe_url: url)
Recipe.where(recipe_url: url)
url
Recipe.where(recipe_url: params[:url])
params[:url]
exit
exit
exit
params[:url]

redirect_to recipe_path(Recipe.find_by(recipe_url: params[:url]))
exit
Recipe.destroy_all
FoodCost.all
exit
Recipe.all
FoodCost.all
Recipe.destroy_all
FoodCost.all
exit
Recipe.all
FoodCost.all
exit
Recipe.destroy_all
FoodCost.all
exit
Recipe.destroy_all
exit
